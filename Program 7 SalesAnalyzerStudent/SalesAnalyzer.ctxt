#BlueJ class context
comment0.target=SalesAnalyzer
comment0.text=\n\ This\ class\ can\ be\ used\ to\ analyze\ the\ sales\ of\ a\ group\ of\ sales\ people.\n\ You\ will\ be\ completing\ the\ methods\ to\ find\ the\ total\ sales,\ average\ sale,\ \n\ min\ and\ max\ sale\ and\ a\ generating\ a\ report\ that\ returns\ a\ table\ with\ each\ salesperson's\ \n\ name\ and\ amount\ of\ sales.\ \ The\ more\ challenging\ part\ of\ this\ project\ is\ \n\ to\ write\ the\ methods\ that\ return\ an\ array\ of\ names\ that\ meet\ certain\ criteria.\n\ These\ methods\ include\ people\ with\ sales\ greater\ than\ or\ equal\ to\ a\ given\ \n\ amount\ as\ well\ as\ people\ that\ have\ the\ maximum\ sales\ amounts.\n\ \n\ @author\ Robert\ Gammelgaard/David\ Gumminger\ \n\ @version\ 20171025\n
comment1.params=names\ sales
comment1.target=SalesAnalyzer(java.lang.String[],\ int[])
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ SalesForce.\n\ @param\ names\ is\ the\ names\ of\ the\ salespeople.\n\ @param\ sales\ is\ the\ amount\ of\ sales\ for\ each\ sales\ person.\n\ Precondition\:\ names\ and\ sales\ must\ have\ same\ length\ and\ not\ null.\n
comment2.params=
comment2.target=int\ totalSales()
comment2.text=\n\ Determines\ the\ total\ amount\ of\ sales\ for\ salespeople\ in\ the\ object's\ array\n\ \n\ @return\ \ the\ total\ sales\ of\ all\ sales\ people\n
comment3.params=
comment3.target=double\ averageSale()
comment3.text=\n\ Determines\ the\ average\ sales\ amount\ from\ the\ salespeople\ in\ the\ object's\ array\n\ \n\ @return\ \ the\ average\ of\ the\ sales\ from\ all\ sales\ people\n
comment4.params=
comment4.target=int\ maxSale()
comment4.text=\n\ Determines\ the\ highest\ sales\ amount\ from\ the\ salespeople\ in\ the\ object's\ array\n\ \n\ @return\ \ the\ maximum\ sales\ amount\ from\ all\ sales\ people\n
comment5.params=
comment5.target=int\ minSale()
comment5.text=\n\ Determines\ the\ lowest\ sales\ amount\ from\ the\ salespeople\ in\ the\ object's\ array\n\ \n\ @return\ \ the\ minimum\ sales\ amount\ of\ all\ sales\ people\n
comment6.params=n
comment6.target=int\ numSalesAtOrAbove(int)
comment6.text=\n\ Finds\ the\ number\ of\ salespeople\ whose\ sales\ were\ at\ or\ above\ an\ input\ value\n\ \n\ @param\ n\ is\ the\ minimum\ sales\ amount\ to\ be\ counted\ \ \ \n\ @return\ \ the\ number\ of\ sales\ amounts\ that\ are\ greater\ or\ equal\ to\ n.\n
comment7.params=
comment7.target=java.lang.String[]\ maxSalesPeople()
comment7.text=\ \n\ Finds\ all\ salespeople\ who\ have\ the\ most\ sales\ of\ those\ in\ ojbect's\ array\n\ \n\ @return\ \ an\ array\ of\ the\ names\ of\ the\ salespeople\ who\ have\ the\ highest\ sales.\n
comment8.params=n
comment8.target=java.lang.String[]\ peopleWithSalesAtOrAbove(int)
comment8.text=\n\ Finds\ all\ salespeople\ whose\ sales\ amount\ was\ at\ or\ above\ an\ input\ amount\n\ \n\ @param\ n\ is\ the\ minimum\ sales\ amount\ for\ sales\ person\ to\ be\ included\ \ \ \n\ @return\ an\ array\ of\ strings\ of\ the\ names\ of\ salespeople\ that\ have\ sales\n\ \ that\ are\ greater\ than\ or\ equal\ to\ n.\n
comment9.params=
comment9.target=java.lang.String\ report()
comment9.text=\n\ Prints\ a\ table\ with\ all\ salepeople\ and\ their\ total\ sales\n\ \n\ @return\ a\ string\ that,\ when\ printed,\ creates\ a\ table\ of\ salespeople\ and\ sales\ amounts.\n
numComments=10
